version: "3"

networks:
  web:
    external: true
  internal:
    external: false

services:
  mysql:
    image: mysql:5.7
    container_name: base_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_HOST: "localhost"
    ports:
      - ${DB_PORT}:3306
    networks:
      - web
      - internal

  web:
    image: nginx:1.15-alpine
    container_name: liga_web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/h5bp:/etc/nginx/h5bp
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /home/ubuntu/sites/freela.web:/var/www/freela.web
      - /home/ubuntu/sites/storage:/var/www/storage
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - api
    networks:
      - web
      - internal

  certbot:
    image: certbot/certbot:v0.36.0
    restart: unless-stopped
    container_name: liga_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - web
      - internal
    depends_on:
      - web

  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: liga_api
    volumes:
      - ${SQLITE_DATABASE_HOST_PATH}:${SQLITE_DATABASE_DOCKER_PATH}
      - ./.env:/var/www/.env
      - /home/ubuntu/sites/freela.api:/var/www
      - /home/ubuntu/sites/storage:/var/www/storage
    environment:
      - NODE_ENV=production
      - DB_TYPE=${DB_TYPE}
      - DB_DATABASE=${DB_DATABASE}
      - DB_SYNCHRONIZE=${DB_SYNCHRONIZE}
      - DB_MIGRATIONS_RUN=${DB_MIGRATIONS_RUN}
      - API_DEFAULT_STRATEGY=${API_DEFAULT_STRATEGY}
      - API_BASE_PATH=${API_BASE_PATH}
      - API_PORT=${API_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - SWAGGER_TITLE=${SWAGGER_TITLE}
      - SWAGGER_DESCRIPTION=${SWAGGER_DESCRIPTION}
      - SWAGGER_VERSION=${SWAGGER_VERSION}
      - SWAGGER_TAG=${SWAGGER_TAG}
    networks:
      - web
      - internal
